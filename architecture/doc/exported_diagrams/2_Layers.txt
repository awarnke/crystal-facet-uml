Layers    [0002D]
| This diagram shows the layering of the main software modules.
| 
| Concept for Multithreading:
| In general, all modules shall work in a multithreaded environment.
| - The gui module requires own data structures in order to be thread-safe
|   and relies on the base libraries gtk, gdk which need to support multi-threading,
| - The pencil module requires own data structures in oder to be thread safe
|   and relies on the base libraries pango and cairo which need to support multi-threading.
| - The data module does not need own data structures, 
|   it comes with a module-wide lock in the database_t structure.
| - The ctrl module requires own data structures in order to be thread safe.
|   This limitation would need to be changed if a multi-threaded gui
|   should access a single ctrl and data instance. (Currently, the software is single-threaded)


gui    [0001C]
| - allows a user 
|     - to select the database
|     - to export diagrams
|     - to modify the uml-model
  uses --> pencil    [0008R]
  uses --> ctrl    [0009R]
  uses --> data    [0010R]


pencil    [0002C]
| - renders diagrams to cairo drawing contexts
| - highlights uml-elements as requested by the gui module
  uses --> data    [0011R]


data    [0004C]
| - provides read access to ctrl, pencil and gui components
| - provides write acccess to only the ctrl component
| - ensures low-level consistency of database: all referenced objects exist.
| - sends notifications on changes


ctrl    [0003C]
| - provides write access to the database
| - ensures consistency of the uml-model, e.g. no duplicate object names, no circular contains-relations
  uses --> data    [0012R]
