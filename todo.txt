
     =====                                 =====
     =====     KEEP IT SIMPLE & STUPID     =====
     =====                                 =====

ideas for future versions:
  @gui
  [ ] After deselecting all elements, paste does not work. One has to select an element first.
      (possibly improved in 1.38.0 by nicer error message)
  [ ] performance optimization: redraw only when shown(=visible) items have changed;
      do not redraw 3 times when changing 3 attributes simultaneously. (especially at undo/redo)
      do not redraw twice, once for deactivating a tool and again for activating another
  [ ] a "saveAs" or export-as-cfu1 command should allow to copy the current db
  [ ] show a progress bar while exporting diagrams (especially for png mode)
  [ ] scrolling through search list missing if result list is too long
  [ ] When undoing/redoing things, switch to a diagram where you see the changes
  [ ] When pasting a new diagram, switch to the new diagram in nav view to see the changes
  [ ] store edited text fields before performing undo/redo operations
  [ ] auto-save when losing focus
  [ ] auto-reload when gaining focus
  [ ] allow creating diagrams before choosing a filename
  @pencil
  [ ] exception+error flows to leave an interruptable area (activity diagrams)
      maybe simply draw a stereotype icon?
  [ ] activity bars on lifelines missing
  [ ] feature compartments in use-cases look ugly
  [?] more relationship types needed: one-way x--> and no x--x dependency (non-navigateable ends)
  [?] more relationship types needed: one-way x--> and no x--x association (maybe x is a feature?)
  [?] check dot notation at relationship ends
  [?] sequence diagrams need if/loop-boxes
  [?] activity diagrams need swimlanes/partition
! [ ] reduce overlaps, analyze the overlaps in test cases by extending pencil_layout_data_get_statistics()
! [ ] allow linebreaks in feature and relationship labels
  [ ] Draw unknown classifier and feature and relationship types nicely, unlike stereotypes and tagged-values in 1.46.0
  [?] A "contains" relationship towards features shall not influence the grid-layouting.
      check data_visible_set.c data_visible_set_private_update_containment_cache()
  @io
  [ ] export formats: enhance xmi standard compliance
  [ ] xmi export is not spec-compliant for uml:Port, provided and required Interfaces
  [ ] xmi export: improve error message if exported file exists and is read-only
  [ ] uuid are preserved at json import. It is not checked if these uuids are unique in _all_ tables.
  [ ] json import: check if the input bytes are valid utf8 characters
  [ ] json export declares "type": "ActivityFinalNode" even if type is state-final
  [ ] json export declares "type": "DecisionNode" even if type is ChoiceNode (statemachine)
  [ ] json export: determining if statemachine_context - is a good guess but not 100% correct
  [ ] json export: create a schema that can be verified by e.g. kwalify, jsonlint or similar ...
  [ ] add test case for opening non-cfuJ files
  @data
  [ ] some diagrams exist for completeness only - but do not contain important information. These shall be greyed out.
      --> use the "display_flags" field of "diagrams"
  [ ] allow to toggle element-filter in diagrams: Show/hide scenario-based relationships, show/hide features,
      show/hide relationships-of-other-diag-types
  [ ] performance optimization: possibly the feature and relationship filter on a visible_set is slow?
  [?] features can have stereotypes, see UML spec 2.5.1 chapter 11.4.5 (maybe use existing value-type?)
  [ ] links unclear:
      interactionuse(diag-reference)-to-fragment(diag); --> use a DATA_FEATURE_TYPE_LINK
      part-to-component, object-to-class
  [ ] links unclear: provided/required-interface(feature)-to-interface(classifier)
  [ ] DATA_CLASSIFIER_TYPE_INTERACTION should exist as element, not be faked from a diagram
  [?] relationship ends don't have roles nor multiplicities nor dot-notation
  @ctrl
  [ ] delete features immediately when they become invisible in all diagrams (rationale: the search+xmi+json export find them)
  [ ] delete relationships immediately when they become invisible in all diagrams (rationale: the search+xmi+json export find them)
  @u8stream
  [ ] combine the static string allocation with dynamic additional buffers for unexpectedly-long strings
      or a buffered view onto the database
  [ ] combine the static array allocation with dynamic additional buffers for arrays of unpredictable lengths
      or a buffered view onto the database
  @main
  @ts_log/trace/test_fw

ideas for a version 2
  - drop gtk3 support (use gtk4 only)
  - drop support for cfu1 storage formats (use cfuJ only)
  - support rust in application code
