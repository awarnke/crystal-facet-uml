<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY dhfirstname "Andreas">
  <!ENTITY dhsurname   "Warnke">
  <!ENTITY dhusername  "Andreas Warnke">
  <!ENTITY dhemail     "cfu@andreaswarnke.de">
  <!ENTITY dhsection   "1">
  <!ENTITY dhtitle     "crystal-facet-uml Command Line Usage">
  <!ENTITY dhucpackage "Crystal-facet-uml">
  <!ENTITY dhpackage   "crystal-facet-uml">
]>

<refentry>
  <refentryinfo>
    <title>&dhtitle;</title>
    <productname>&dhpackage;</productname>
    <authorgroup>
      <author>
        <firstname>&dhfirstname;</firstname>
        <surname>&dhsurname;</surname>
        <contrib>wrote this manpage for Unix and Linux systems.</contrib>
        <address>
          <email>&dhemail;</email>
        </address>
      </author>
    </authorgroup>
    <copyright>
      <year><!-- Copyright -->2018-2022</year>
      <holder>&dhusername;</holder>
    </copyright>
    <legalnotice>
      <para>This manual page was written for Unix and Linux systems.</para>
      <para>Permission is granted to copy, distribute and/or modify this
        document under the terms of the Apache-2.0 License.</para>
    </legalnotice>
  </refentryinfo>
  <refmeta>
    <refentrytitle>&dhucpackage;</refentrytitle>
    <manvolnum>&dhsection;</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>
    <refpurpose>
        creates a set of uml diagrams.
        &dhpackage; ensures consistency of relationships and uml element names between different diagrams.
        &dhpackage; exports diagrams in various vector and pixel-based image formats.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="opt">
        <option>-u <replaceable class="option">database_file</replaceable>
        </option>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="plain">
        <group choice="req">
          <arg choice="plain"><option>-t</option></arg>
          <arg choice="plain"><option>-r</option></arg>
        </group>
        <replaceable class="option">database_file</replaceable>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="plain">
        <group choice="req">
          <arg choice="plain"><option>-h</option></arg>
          <arg choice="plain"><option>-v</option></arg>
        </group>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="plain">
        -e <replaceable class="option">database_file</replaceable>
        <replaceable class="option">export_format</replaceable>
        <replaceable class="option">export_directory</replaceable>
      </arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      <arg choice="plain">
        -i <replaceable class="option">database_file</replaceable>
        <replaceable class="option">import_mode</replaceable>
        <replaceable class="option">json_input_file</replaceable>
      </arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1 id="description">
    <title>DESCRIPTION</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="1_non_tech_intro_para.xml" />
  </refsect1>
  <refsect1 id="options">
    <title>OPTIONS</title>
    <para>
       Without options, the program starts in graphical mode.
       See crystal-facet-uml_documentation.pdf for graphical mode usage.
    </para>
    <variablelist>
      <varlistentry>
        <term><option>-u <replaceable>database_file</replaceable></option></term>
        <listitem>
          <para>
              Starts in graphical mode and opens the database_file immediately.
          </para>
          <para>
              If the file does not exist, a new, empty database is created.
              If database_file ends on .cfu1, a binary database file is created.
              Otherwise, a json data file is created.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-t <replaceable>database_file</replaceable></option></term>
        <listitem>
          <para>
              Tests the consistency of a database_file.
              In case of an error, a non-zero value is returned.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
          <term><option>-r <replaceable>database_file</replaceable></option></term>
          <listitem>
              <para>Tests the consistency of a database_file and repairs found issues.</para>
          </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-h</option></term>
        <listitem>
          <para>Show summary of options.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-v</option></term>
        <listitem>
          <para>Show version</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-e <replaceable>database_file</replaceable>
                <replaceable>export_format</replaceable>
                <replaceable>export_directory</replaceable></option></term>
        <listitem>
          <para>
              Exports all diagrams of a database_file in export_format to the export_directory.
              Valid formats are: docbook, json, pdf, png, ps, svg, txt, xhtml, xmi.
              Please be aware that the export overwrites possibly existing files in the export_directory without notice.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-i <replaceable>database_file</replaceable>
                <replaceable>import_mode</replaceable>
                <replaceable>json_input_file</replaceable></option></term>
        <listitem>
          <para>
              Imports elements from json_input_file to the database_file.
              Valid modes are: check, add.
              Please create a backup of your database_file before importing.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1 id="example">
    <title>EXAMPLE</title>
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="3_command_line_example_para.xml" />
  </refsect1>
  <refsect1 id="diagnostics">
    <title>DIAGNOSTICS</title>
    <para>The following diagnostics may be issued
      on <filename class="devicefile">syslog</filename>:
    </para>
    <variablelist>
      <varlistentry>
        <term><errortext>EVT : ...</errortext></term>
        <listitem>
          <para>An event occurred.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
          <term><errortext>ANOM: ...</errortext></term>
          <listitem>
              <para>Something unexpected happened that was handled.
              </para>
          </listitem>
      </varlistentry>
      <varlistentry>
          <term><errortext>WARN: ...</errortext></term>
          <listitem>
              <para>Something unexpected happened that may cause a failure.
              </para>
          </listitem>
      </varlistentry>
      <varlistentry>
          <term><errortext>ERR : ...</errortext></term>
          <listitem>
              <para>Something unexpected happened that has caused a failure.
              </para>
          </listitem>
      </varlistentry>
    </variablelist>
    <para><command>journalctl -f</command> allows one to
      read the syslog.
    </para>
  </refsect1>
  <refsect1 id="bugs">
    <title>BUGS</title>
    <para>The upstreams <acronym>BTS</acronym> can be found
        at <ulink url="https://github.com/awarnke/crystal-facet-uml/issues"/>.</para>
  </refsect1>
</refentry>

