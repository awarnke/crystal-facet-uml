PROJECT(crystal_facet_uml)
CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -D_XOPEN_SOURCE=700 -O2 -pedantic" )
INCLUDE_DIRECTORIES(../gui/source)
INCLUDE_DIRECTORIES(../gui/include)
INCLUDE_DIRECTORIES(../main/source)
INCLUDE_DIRECTORIES(../main/include)
INCLUDE_DIRECTORIES(../tslog/include)
INCLUDE_DIRECTORIES(../trace/source)
INCLUDE_DIRECTORIES(../trace/include)
INCLUDE_DIRECTORIES(../ctrl/source)
INCLUDE_DIRECTORIES(../ctrl/include)
INCLUDE_DIRECTORIES(../data/source)
INCLUDE_DIRECTORIES(../data/include)
INCLUDE_DIRECTORIES(../sqlite/source)
INCLUDE_DIRECTORIES(../sqlite/include)
INCLUDE_DIRECTORIES(../utf8stringbuf/include)
INCLUDE_DIRECTORIES(../pencil/source)
INCLUDE_DIRECTORIES(../pencil/include)
INCLUDE_DIRECTORIES(../universal/include)
INCLUDE_DIRECTORIES(/usr/include/cairo)
INCLUDE_DIRECTORIES(/usr/include/freetype2)
INCLUDE_DIRECTORIES(/opt/gnome/include/gtk-3.0)
INCLUDE_DIRECTORIES(/opt/gnome/lib/gtk-3.0/include)
INCLUDE_DIRECTORIES(/opt/gnome/include/glib-3.0)
INCLUDE_DIRECTORIES(/opt/gnome/lib/glib-3.0/include)
INCLUDE_DIRECTORIES(/opt/gnome/include/atk-1.0)
INCLUDE_DIRECTORIES(/opt/gnome/include/gtk-3.0/gtk)
INCLUDE_DIRECTORIES(/opt/gnome/include/pango-1.0)
INCLUDE_DIRECTORIES(/usr/include/pango-1.0)
INCLUDE_DIRECTORIES(/usr/include/gio-unix-2.0)
INCLUDE_DIRECTORIES(/usr/include/atk-1.0)
INCLUDE_DIRECTORIES(/usr/lib/glib-3.0/include)
INCLUDE_DIRECTORIES(/usr/lib/gtk-3.0/include)
INCLUDE_DIRECTORIES(/usr/include/gtk-3.0)
INCLUDE_DIRECTORIES(/usr/lib64/gtk-3.0/include)
INCLUDE_DIRECTORIES(/usr/include/glib-2.0)
INCLUDE_DIRECTORIES(/usr/lib64/glib-2.0/include)
INCLUDE_DIRECTORIES(/usr/include/gdk-pixbuf-2.0)
INCLUDE_DIRECTORIES(/usr/lib/arm-linux-gnueabihf/glib-2.0/include)
INCLUDE_DIRECTORIES(/usr/lib/arm-linux-gnueabihf/gtk-3.0/include)
LINK_DIRECTORIES(/opt/gnome/lib)
LINK_DIRECTORIES(/opt/gnome/lib/gtk-3.0)
LINK_DIRECTORIES(/usr/lib/)
LINK_DIRECTORIES(/usr/lib64/)
SET(crystal_facet_uml_BINARY_DIR ../bin)
SET(crystal_facet_uml_SOURCE_DIR ..)
FILE(GLOB commonSource ../gui/source/*.c ../trace/source/*.c ../ctrl/source/*.c ../data/source/*.c ../data/source/storage/*.c ../data/source/serial/*.c ../sqlite/source/sqlite3.c ../utf8stringbuf/source/util/string/*.c ../pencil/source/*.c ../pencil/source/util/geometry/*.c)
FILE(GLOB appSource ../main/source/*.c)
FILE(GLOB utestSource ../main/unittest/*.c ../embunit/embUnit/*.c ../embunit/textui.c ../data/unittest/*.c ../ctrl/unittest/*.c ../pencil/unittest/*.c)

LIST(APPEND applicationSource ${commonSource} ${appSource})
ADD_EXECUTABLE(crystal_facet_uml ${applicationSource})
TARGET_LINK_LIBRARIES(crystal_facet_uml gtk-3 gdk-3 glib-2.0 cairo pango-1.0 pangocairo-1.0 gobject-2.0 freetype gdk_pixbuf-2.0 pthread dl m)
SET_TARGET_PROPERTIES(crystal_facet_uml PROPERTIES LINKER_LANGUAGE C)

INSTALL(TARGETS crystal_facet_uml DESTINATION "/usr/bin/") # Add this for CPack to work
INSTALL(FILES "cfu_install_files/crystal_facet_uml.desktop" DESTINATION "/usr/share/applications/")
INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/../user_doc/doc/crystal_facet_uml_80x80.png" DESTINATION "/usr/share/pixmaps/")

MESSAGE( "Note: to build a release, run               cmake -DCMAKE_BUILD_TYPE=Release ." )
MESSAGE( "Note: to build with asserts and traces, run cmake -DCMAKE_BUILD_TYPE=Debug ." )

INCLUDE_DIRECTORIES(../embunit)
INCLUDE_DIRECTORIES(../data/unittest)
INCLUDE_DIRECTORIES(../ctrl/unittest)
INCLUDE_DIRECTORIES(../pencil/unittest)

LIST(APPEND unittestSource ${commonSource} ${utestSource})
ADD_EXECUTABLE(unittest_crystal_facet_uml ${unittestSource})
TARGET_LINK_LIBRARIES(unittest_crystal_facet_uml gtk-3 gdk-3 glib-2.0 cairo pango-1.0 pangocairo-1.0 gobject-2.0 freetype gdk_pixbuf-2.0 pthread dl m)
SET_TARGET_PROPERTIES(unittest_crystal_facet_uml PROPERTIES LINKER_LANGUAGE C)

# see https://cmake.org/cmake/help/v3.0/module/CPack.html
MESSAGE("Note: running 'make install' or 'make package' may require super user privileges")
INCLUDE(InstallRequiredSystemLibraries)
SET(CPACK_PACKAGE_NAME "${PROJECT_NAME}")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A tool to create a set of consistent uml diagrams")
SET(CPACK_PACKAGE_VENDOR "Andreas Warnke")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/../readme.txt")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/../license.txt")
SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "11")
SET(CPACK_PACKAGE_VERSION_PATCH "0")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "${PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")
SET(CPACK_PACKAGE_ICON "${CMAKE_CURRENT_SOURCE_DIR}/../user_doc/doc/crystal_facet_uml_80x80.png")
SET(CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}")
SET(CPACK_PACKAGE_EXECUTABLES "crystal_facet_uml" "crystal facet uml")
if(EXISTS /usr/bin/rpmbuild)
  SET(CPACK_GENERATOR "RPM;DEB")
else(EXISTS /usr/bin/rpmbuild)
  SET(CPACK_GENERATOR "DEB")
endif(EXISTS /usr/bin/rpmbuild)

SET(CPACK_RPM_PACKAGE_SUMMARY "${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")
SET(CPACK_RPM_PACKAGE_NAME "${PROJECT_NAME}")
SET(CPACK_RPM_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")
SET(CPACK_RPM_PACKAGE_RELEASE 1)
SET(CPACK_RPM_PACKAGE_LICENSE "Apache 2.0")
SET(CPACK_RPM_PACKAGE_GROUP "unknown")
SET(CPACK_RPM_PACKAGE_VENDOR "${CPACK_PACKAGE_VENDOR}")
SET(CPACK_RPM_PACKAGE_DESCRIPTION "${CPACK_PACKAGE_DESCRIPTION_SUMMARY}")

SET(CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_VENDOR})

INCLUDE(CPack)
